version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpasswd
      POSTGRES_DB: airflow
      POSTGRES_MULTIPLE_DATABASES: "sample_data_source,sample_tableau"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql/data
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s    
    networks:
      - airflow

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - airflow

  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - airflow
    depends_on:
      - zookeeper

  airflow-init:
    image: apache/airflow:2.1.2
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init
        airflow users create \
          --username devuser \
          --password devpasswd \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email colt@the-nre-project.com
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://devuser:devpasswd@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://devuser:devpasswd@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: kafka://kafka:9092
      AIRFLOW__SMTP__SMTP_HOST: mailhog
      AIRFLOW__SMTP__SMTP_PORT: 1025
      AIRFLOW__SMTP__SMTP_USER: ""
      AIRFLOW__SMTP__SMTP_PASSWORD: ""
      AIRFLOW__SMTP__SMTP_MAIL_FROM: "airflow@the-nre-project.com"
      AIRFLOW_HOME: /opt/airflow
    volumes:
      - ./airflow:/opt/airflow
    networks:
      - airflow
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy      

  airflow-webserver:
    image: apache/airflow:2.1.2
    entrypoint: ["airflow", "webserver"]
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://devuser:devpasswd@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://devuser:devpasswd@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: kafka://kafka:9092
      AIRFLOW__SMTP__SMTP_HOST: mailhog
      AIRFLOW__SMTP__SMTP_PORT: 1025
      AIRFLOW__SMTP__SMTP_USER: ""
      AIRFLOW__SMTP__SMTP_PASSWORD: ""
      AIRFLOW__SMTP__SMTP_MAIL_FROM: "airflow@the-nre-project.com"
      AIRFLOW_HOME: /opt/airflow
    ports:
      - "8080:8080"
    volumes:
      - ./airflow:/opt/airflow
    networks:
      - airflow
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      mailhog:
        condition: service_started
      airflow-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s    

  airflow-scheduler:
    image: apache/airflow:2.1.2
    entrypoint: ["airflow", "scheduler"]
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://devuser:devpasswd@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://devuser:devpasswd@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: kafka://kafka:9092
      AIRFLOW__SMTP__SMTP_HOST: mailhog
      AIRFLOW__SMTP__SMTP_PORT: 1025
      AIRFLOW__SMTP__SMTP_USER: ""
      AIRFLOW__SMTP__SMTP_PASSWORD: ""
      AIRFLOW__SMTP__SMTP_MAIL_FROM: "airflow@the-nre-project.com"
      AIRFLOW_HOME: /opt/airflow
    volumes:
      - ./airflow:/opt/airflow
    networks:
      - airflow
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      mailhog:
        condition: service_started
      airflow-init:
        condition: service_completed_successfully

  airflow-worker:
    image: apache/airflow:2.1.2
    entrypoint: ["airflow", "celery", "worker"]
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://devuser:devpasswd@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://devuser:devpasswd@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: kafka://kafka:9092
      AIRFLOW__SMTP__SMTP_HOST: mailhog
      AIRFLOW__SMTP__SMTP_PORT: 1025
      AIRFLOW__SMTP__SMTP_USER: ""
      AIRFLOW__SMTP__SMTP_PASSWORD: ""
      AIRFLOW__SMTP__SMTP_MAIL_FROM: "airflow@the-nre-project.com"
      AIRFLOW_HOME: /opt/airflow
    volumes:
      - ./airflow:/opt/airflow
    networks:
      - airflow
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      mailhog:
        condition: service_started
      airflow-init:
        condition: service_completed_successfully

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      airflow-webserver:
        condition: service_healthy
    networks:
      - airflow

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - airflow

  data_creator:
    image: python:3.11
    build:
      context: ./data_creator
      dockerfile: Dockerfile
    volumes:
      - ./data_creator:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - airflow

volumes:
  postgres_data:

networks:
  airflow:
    driver: bridge